{"version":3,"sources":["navigation/AuthUserProvider.js","components/Firebase/firebase.js","components/Firebase/firebaseConfig.js","utils/colors.js","navigation/navigationTheme.js","components/AppButton1.js","components/AppButton2.js","screens/WelcomeScreen.js","components/SafeView.js","components/Forms/Form.js","components/AppTextInput.js","components/Forms/FormErrorMessage.js","components/Forms/FormField.js","components/Forms/FormButton.js","components/IconButton.js","hooks/useStatusBar.js","screens/RegisterScreen.js","screens/LoginScreen.js","screens/ForgotPasswordScreen.js","screens/GuestView.js","screens/MyTabs.js","navigation/AuthStack.js","screens/HomeScreen.js","navigation/AppStack.js","components/Spinner.js","navigation/Routes.js","navigation/index.js","App.js","web-build/register-service-worker.js","assets/flame.png","assets/swipe/12_daniel_can_bc-207.jpg","assets/swipe/emo-happiness.jpg","assets/swipe/nature1_gettyimages.jpg","assets/swipe/96d0a32e8ab168eac62d8beee2ffabf7.17.jpg"],"names":["AuthUserContext","createContext","AuthUserProvider","children","useState","user","setUser","Provider","value","firebase","length","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","loginWithEmail","email","password","signInWithEmailAndPassword","registerWithEmail","createUserWithEmailAndPassword","passwordReset","sendPasswordResetEmail","navigationTheme","DefaultTheme","colors","primary","Colors","text","border","background","AppButton1","title","onPress","color","TouchableOpacity","style","styles","button","backgroundColor","buttonText","StyleSheet","create","padding","alignItems","borderRadius","width","fontSize","fontWeight","AppButton2","WelcomeScreen","navigation","View","container","StatusBar","barStyle","navigate","SafeAreaView","Image","tinyLogo","source","require","buttonContainer","paddingTop","paddingLeft","flex","justifyContent","textAlign","margin","flexDirection","resizeMode","paddingRight","subtitle","paddingVertical","paddingBottom","SafeView","safeAreaContainer","Constants","statusBarHeight","Form","initialValues","onSubmit","validationSchema","Fragment","AppTextInput","leftIcon","rightIcon","handlePasswordVisibility","otherProps","MaterialCommunityIcons","name","size","icon","TextInput","input","placeholderTextColor","rightIconStyles","marginVertical","marginRight","alignSelf","marginLeft","FormErrorMessage","error","visible","errorText","marginBottom","FormField","useFormikContext","setFieldTouched","setFieldValue","values","errors","touched","onChangeText","onBlur","FormButton","handleSubmit","IconButton","iconName","useStatusBar","animated","useFocusEffect","useCallback","setBarStyle","Yup","shape","required","label","min","confirmPassword","oneOf","RegisterScreen","passwordVisibility","setPasswordVisibility","setRightIcon","confirmPasswordIcon","setConfirmPasswordIcon","confirmPasswordVisibility","setConfirmPasswordVisibility","registerError","setRegisterError","actions","a","async","message","handleOnSignUp","placeholder","autoFocus","autoCapitalize","keyboardType","textContentType","autoCorrect","secureTextEntry","hyrja","backButton","goBack","LoginScreen","loginError","setLoginError","handleOnLogin","footerButtonContainer","forgotPasswordButtonText","ForgotPasswordScreen","customError","setCustomError","handlePasswordReset","GuestView","sliderContainer","height","marginTop","wrapper","slide","sliderImage","categoryContainer","categoryBtn","marginHorizontal","categoryIcon","borderWidth","categoryBtnTxt","cardsWrapper","card","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","cardImgWrapper","cardImg","borderBottomRightRadius","borderTopRightRadius","cardInfo","borderColor","borderLeftWidth","cardTitle","cardDetails","header","display","headerLogo","list","paddingHorizontal","listImage","listingRatingContainer","budgetTagsContainer","newContainer","position","top","left","createMaterialBottomTabNavigator","MyTabs","Stack","createStackNavigator","AuthStack","Navigator","initialRouteName","headerMode","Screen","component","HomeScreen","Button","signOut","console","log","AppStack","Spinner","ActivityIndicator","Routes","useContext","isLoading","setIsLoading","useEffect","onAuthStateChanged","authUser","NavigationContainer","theme","Providers","App","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","module","exports"],"mappings":"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","file":"static/js/app.07e5e73b.chunk.js","sourcesContent":["import React, { useState, createContext } from 'react';\n\nexport const AuthUserContext = createContext({});\n\nexport const AuthUserProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n\n  return (\n    <AuthUserContext.Provider value={{ user, setUser }}>\n      {children}\n    </AuthUserContext.Provider>\n  );\n};\n","import * as firebase from 'firebase';\nimport 'firebase/auth';\n\nimport 'firebase/firestore';\n\nimport firebaseConfig from './firebaseConfig';\n\n// Initialize Firebase App\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nexport const restaurantsRef = firebase.firestore();\n\nexport const auth = firebase.auth();\n\nexport const loginWithEmail = (email, password) =>\n  auth.signInWithEmailAndPassword(email, password);\n\nexport const registerWithEmail = (email, password) =>\n  auth.createUserWithEmailAndPassword(email, password);\n\nexport const logout = () => auth.signOut();\n\nexport const passwordReset = email => auth.sendPasswordResetEmail(email);\n","// Rename this file to \"firebaseConfig.js\" before use\n// Replace all XXXXs with real Firebase API keys\n\nexport default {\n  apiKey: \"AIzaSyAVd11RAPr8gX3Zsz87XJ3_2XZ_CPsCF94\",\n  authDomain: \"prova2-51756.firebaseapp.com\",\n  databaseURL: \"https://prova2-51756.firebaseio.com\",\n  projectId: \"prova2-51756\",\n  storageBucket: \"prova2-51756.appspot.com\",\n  messagingSenderId: \"15882499448\",\n  appId: \"1:15882499448:web:81a0d2fd1f9ca410c0c48d\",\n  measurementId: \"G-FCR198S93K\"\n};","export default {\n  primary: '#f57c00',\n  secondary: '#039be5',\n  black: '#222222',\n  white: '#ffffff',\n  ghostWhite: '#f8f8ff',\n  lightGrey: '#f9f9f9',\n  mediumGrey: '#6e6869',\n  red: '#fc5c65'\n};\n","import { DefaultTheme } from '@react-navigation/native';\n\nimport Colors from '../utils/colors';\n\nconst navigationTheme = {\n  ...DefaultTheme,\n  // override colors\n  colors: {\n    ...DefaultTheme.colors,\n    primary: Colors.primary,\n    text: Colors.primary,\n    border: Colors.mediumGrey,\n    background: Colors.ghostWhite\n  }\n};\n\nexport default navigationTheme;\n","import React from 'react';\nimport { StyleSheet, Text, TouchableOpacity } from 'react-native';\n\nimport Colors from '../utils/colors';\n\nexport default function AppButton1({ title, onPress, color = 'primary' }) {\n  return (\n    <TouchableOpacity\n      style={[styles.button, { backgroundColor: \"rgb(142, 223, 135)\" }]}\n      onPress={onPress}\n    >\n      <Text style={styles.buttonText}>{title}</Text>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    padding: 15,\n                alignItems: \"center\",\n                borderRadius: 10,\n                width: \"50%\",\n  },\n  buttonText: {\n    backgroundColor: \"transparent\",\n                  fontSize: 16,\n                  color: \"rgb(0, 0, 0 )\",\n                  fontWeight: \"bold\",\n  }\n});\n","import React from 'react';\r\nimport { StyleSheet, Text, TouchableOpacity } from 'react-native';\r\n\r\nimport Colors from '../utils/colors';\r\n\r\nexport default function AppButton2({ title, onPress, color = 'primary' }) {\r\n  return (\r\n    <TouchableOpacity\r\n      style={[styles.button, { backgroundColor:  \"rgb(130, 130, 130)\" }]}\r\n      onPress={onPress}\r\n    >\r\n      <Text style={styles.buttonText}>{title}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  button: {\r\n    padding: 16,\r\n    alignItems: \"center\",\r\n    borderRadius: 10,\r\n    width: \"50%\",\r\n  },\r\n  buttonText: {\r\n    backgroundColor: \"transparent\",\r\n                  fontSize: 16,\r\n                  color: \"rgb(0, 0, 0 )\",\r\n                  fontWeight: \"bold\",\r\n  }\r\n});\r\n","import React from 'react';\nimport { View, StyleSheet, Text, Image, StatusBar, SafeAreaView, Button, TouchableOpacity } from 'react-native';\n\nimport AppButton1 from '../components/AppButton1';\nimport AppButton2 from '../components/AppButton2';\nimport Colors from '../utils/colors';\n\n\n\n \nconst WelcomeScreen = ({ navigation }) => {\n  return (\n  \n      <View style={styles.container}>\n        <StatusBar\n          backgroundColor=\"rgb(174, 121, 132)\"\n          barStyle=\"light-content\"\n        /> \n        <View style={styles.button}>\n          <TouchableOpacity \n          onPress={() => navigation.navigate('GuestView')}\n          style={{ backgroundColor: 'orange',\n          padding: 20,\n          borderRadius: 20,\n          \n         alignItems: \"center\", }}><Text style={styles.buttonText}>Hyrje e shpejte</Text></TouchableOpacity>\n    \n\n            \n          </View> \n      \n        <SafeAreaView style={styles.container}>\n         \n          <Image\n            style={styles.tinyLogo}\n            source={require(\"../assets/flame.png\")}\n          />\n     <View style={styles.buttonContainer}>\n      \n         \n        <AppButton1 title=\"Hyr\"  onPress={() => navigation.navigate('Login')} />\n            \n                \n        <AppButton2\n          title=\"Regjistrohu\"\n    \n          onPress={() => navigation.navigate('Register')}\n        />\n          </View>\n        </SafeAreaView>\n      </View>\n      );\n     }\n     export default  WelcomeScreen;\n\n\n  \n\n\n\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"rgb(174, 121, 132)\",\n    paddingTop: 20,\n    paddingLeft: 0,\n    flex: 1\n  ,\n    justifyContent: \"center\",\n  },\n  button: {\n    padding: 25,\n    alignItems: \"center\",\n    borderRadius: 20,\n  },\n  buttonText: {\n    fontSize: 18,\n    borderRadius: 10,\n    fontWeight: 'bold',\n\n    textAlign: \"center\",\n    margin: 10,\n    color: \"rgb(0, 0, 0)\",\n    backgroundColor: \"transparent\",\n  },\n\n  tinyLogo: {\n    flex: 1,\n    flexDirection: \"row\",\n    resizeMode: \"contain\",\n    width: '90%',\n    paddingRight: 60,\n\n  },\n  subtitle: {\n    fontSize: 24,\n    fontWeight: '600',\n    paddingVertical: 20,\n    color: Colors.primary\n  },\n  buttonContainer: {\n    paddingBottom: 30,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n  }\n});\n","import React from 'react';\nimport { View, StyleSheet, SafeAreaView } from 'react-native';\nimport Constants from 'expo-constants';\n\nexport default function SafeView({ children, style }) {\n  return (\n    <SafeAreaView style={[styles.safeAreaContainer, style]}>\n      <View style={[styles.container, style]}>{children}</View>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  safeAreaContainer: {\n    flex: 1,\n    paddingTop: Constants.statusBarHeight\n  },\n  container: {\n    flex: 1\n  }\n});\n","import React from 'react';\nimport { Formik } from 'formik';\n\nexport default function Form({\n  children,\n  initialValues,\n  onSubmit,\n  validationSchema\n}) {\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n    >\n      {() => <React.Fragment>{children}</React.Fragment>}\n    </Formik>\n  );\n}\n","import React from 'react';\nimport { View, StyleSheet, TextInput, TouchableOpacity } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\n\nimport Colors from '../utils/colors';\n\nexport default function AppTextInput({\n  leftIcon,\n  width = '100%',\n  rightIcon,\n  handlePasswordVisibility,\n  ...otherProps\n}) {\n  return (\n    <View style={[styles.container, { width }]}>\n      {leftIcon && (\n        <MaterialCommunityIcons\n          name={leftIcon}\n          size={20}\n          color={Colors.mediumGrey}\n          style={styles.icon}\n        />\n      )}\n      <TextInput\n        style={styles.input}\n        placeholderTextColor={Colors.mediumGrey}\n        {...otherProps}\n      />\n      {rightIcon && (\n        <TouchableOpacity onPress={handlePasswordVisibility}>\n          <MaterialCommunityIcons\n            name={rightIcon}\n            size={20}\n            color={Colors.mediumGrey}\n            style={styles.rightIconStyles}\n          />\n        </TouchableOpacity>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: Colors.lightGrey,\n    borderRadius: 25,\n    flexDirection: 'row',\n    padding: 15,\n    marginVertical: 10\n  },\n  icon: {\n    marginRight: 10\n  },\n  input: {\n    flex: 1,\n    width: '100%',\n    fontSize: 18,\n    color: Colors.black\n  },\n  rightIconStyles: {\n    alignSelf: 'center',\n    marginLeft: 10\n  }\n});\n","import React from 'react';\nimport { StyleSheet, Text } from 'react-native';\n\nimport Colors from '../../utils/colors';\n\nexport default function FormErrorMessage({ error, visible }) {\n  if (!error || !visible) {\n    return null;\n  }\n\n  return <Text style={styles.errorText}>{error}</Text>;\n}\n\nconst styles = StyleSheet.create({\n  errorText: {\n    marginLeft: 5,\n    color: Colors.red,\n    fontSize: 13,\n    marginBottom: 5,\n    fontWeight: '600',\n    textAlign: 'center'\n    \n  \n  }\n});\n","import React from 'react';\nimport { useFormikContext } from 'formik';\n\nimport AppTextInput from '../AppTextInput';\nimport FormErrorMessage from './FormErrorMessage';\n\nexport default function FormField({ name, width, ...otherProps }) {\n  const {\n    setFieldTouched,\n    setFieldValue,\n    values,\n    errors,\n    touched\n  } = useFormikContext();\n\n  return (\n    <React.Fragment>\n      <AppTextInput\n        value={values[name]}\n        onChangeText={text => setFieldValue(name, text)}\n        onBlur={() => setFieldTouched(name)}\n        width={width}\n        {...otherProps}\n      />\n      <FormErrorMessage error={errors[name]} visible={touched[name]} />\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { useFormikContext } from 'formik';\n\nimport AppButton1 from '../AppButton1';\n\nexport default function FormButton({ title }) {\n  const { handleSubmit } = useFormikContext();\n\n  return <AppButton1 title={title} onPress={handleSubmit} />;\n}\n","import React from 'react';\nimport { StyleSheet, TouchableOpacity } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\n\nexport default function IconButton({ iconName, color, size, onPress, style }) {\n  return (\n    <TouchableOpacity style={[style]} onPress={onPress}>\n      <MaterialCommunityIcons name={iconName} size={size} color={color} />\n    </TouchableOpacity>\n  );\n}\n","import React, { useCallback } from 'react';\nimport { StatusBar } from 'react-native';\nimport { useFocusEffect } from '@react-navigation/native';\n\nexport default function useStatusBar(style, animated = true) {\n  useFocusEffect(\n    useCallback(() => {\n      StatusBar.setBarStyle(style, animated);\n    }, [])\n  );\n}\n","import React, { useState } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport * as Yup from 'yup';\n\nimport Colors from '../utils/colors';\nimport SafeView from '../components/SafeView';\nimport Form from '../components/Forms/Form';\nimport FormField from '../components/Forms/FormField';\nimport FormButton from '../components/Forms/FormButton';\nimport IconButton from '../components/IconButton';\nimport FormErrorMessage from '../components/Forms/FormErrorMessage';\nimport { registerWithEmail } from '../components/Firebase/firebase';\nimport useStatusBar from '../hooks/useStatusBar';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .required('Vendosni Emrin tuaj te sakte')\n    .label('Name'),\n  email: Yup.string()\n    .required('Kerkohet nje Email i pranueshem')\n    .email()\n    .label('Email'),\n  password: Yup.string()\n    .required()\n    .min(6, 'Fjalekalimi duhet te kete te pakten 6 simbole')\n    .label('Password'),\n  confirmPassword: Yup.string()\n    .oneOf([Yup.ref('password')], 'Confirm Password must match Password')\n    .required('Duhet te perputhet me Fjalekalimin')\n});\n\nexport default function RegisterScreen({ navigation }) {\n  useStatusBar('light-content');\n\n  const [passwordVisibility, setPasswordVisibility] = useState(true);\n  const [rightIcon, setRightIcon] = useState('eye');\n  const [confirmPasswordIcon, setConfirmPasswordIcon] = useState('eye');\n  const [confirmPasswordVisibility, setConfirmPasswordVisibility] = useState(\n    true\n  );\n  const [registerError, setRegisterError] = useState('');\n\n  function handlePasswordVisibility() {\n    if (rightIcon === 'eye') {\n      setRightIcon('eye-off');\n      setPasswordVisibility(!passwordVisibility);\n    } else if (rightIcon === 'eye-off') {\n      setRightIcon('eye');\n      setPasswordVisibility(!passwordVisibility);\n    }\n  }\n\n  function handleConfirmPasswordVisibility() {\n    if (confirmPasswordIcon === 'eye') {\n      setConfirmPasswordIcon('eye-off');\n      setConfirmPasswordVisibility(!confirmPasswordVisibility);\n    } else if (confirmPasswordIcon === 'eye-off') {\n      setConfirmPasswordIcon('eye');\n      setConfirmPasswordVisibility(!confirmPasswordVisibility);\n    }\n  }\n\n  async function handleOnSignUp(values, actions) {\n    const { email, password } = values;\n    try {\n      await registerWithEmail(email, password);\n    } catch (error) {\n      setRegisterError(error.message);\n    }\n  }\n\n  return (\n    <SafeView style={styles.container}>\n      <Form\n        initialValues={{\n          name: '',\n          email: '',\n          password: '',\n          confirmPassword: ''\n        }}\n        validationSchema={validationSchema}\n        onSubmit={values => handleOnSignUp(values)}\n      >\n        <FormField\n          name=\"name\"\n          leftIcon=\"account\"\n          placeholder=\"Emri\"\n          autoFocus={true}\n        />\n        <FormField\n          name=\"email\"\n          leftIcon=\"email\"\n          placeholder=\"Emaili Juaj\"\n          autoCapitalize=\"none\"\n          keyboardType=\"email-address\"\n          textContentType=\"emailAddress\"\n        />\n        <FormField\n          name=\"password\"\n          leftIcon=\"lock\"\n          placeholder=\"Fjalekalimi\"\n          autoCapitalize=\"none\"\n          autoCorrect={false}\n          secureTextEntry={passwordVisibility}\n          textContentType=\"password\"\n          rightIcon={rightIcon}\n          handlePasswordVisibility={handlePasswordVisibility}\n        />\n        <FormField\n          name=\"confirmPassword\"\n          leftIcon=\"lock\"\n          placeholder=\"Perserisni Fjalekalimin\"\n          autoCapitalize=\"none\"\n          autoCorrect={false}\n          secureTextEntry={confirmPasswordVisibility}\n          textContentType=\"password\"\n          rightIcon={confirmPasswordIcon}\n          handlePasswordVisibility={handleConfirmPasswordVisibility}\n        />\n        <View style={styles.hyrja}>\n          <FormButton title={'Regjistrohu'} />\n        {<FormErrorMessage error={registerError} visible={true} />}\n     \n        </View>\n         </Form>\n      <IconButton\n        style={styles.backButton}\n        iconName=\"keyboard-backspace\"\n        color={Colors.white}\n        size={30}\n        onPress={() => navigation.goBack()}\n      />\n    </SafeView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: '15%',\n    padding: 15,\n    backgroundColor: \"rgb(174, 121, 132)\",\n  },\n  hyrja: {\n    width: 500,\n    justifyContent: \"center\",\n    paddingLeft: '10%',\n    borderRadius: 20,\n    \n  },\n\n  backButton: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginVertical: 10\n  \n  }\n});\n\n","import React, { useState } from 'react';\nimport { StyleSheet, TouchableOpacity, Text, View, StatusBar } from 'react-native';\nimport * as Yup from 'yup';\n\nimport Colors from '../utils/colors';\nimport SafeView from '../components/SafeView';\nimport Form from '../components/Forms/Form';\nimport FormField from '../components/Forms/FormField';\nimport FormButton from '../components/Forms/FormButton';\nimport IconButton from '../components/IconButton';\nimport { loginWithEmail } from '../components/Firebase/firebase';\nimport FormErrorMessage from '../components/Forms/FormErrorMessage';\nimport useStatusBar from '../hooks/useStatusBar';\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string()\n    .required('Ju lutem futni nje Email te sakte')\n    .email('Emaili juaj!')\n    .label('Email'),\n  password: Yup.string()\n    .required('Ju lutem vendosni Fjalekalimin')\n    .min(6, 'Fjalekalimi duhet te permbaje 6 simbole')\n    .label('Password')\n});\n\nexport default function LoginScreen({ navigation }) {\n  useStatusBar('light-content');\n\n  const [passwordVisibility, setPasswordVisibility] = useState(true);\n  const [rightIcon, setRightIcon] = useState('eye');\n  const [loginError, setLoginError] = useState('');\n\n  function handlePasswordVisibility() {\n    if (rightIcon === 'eye') {\n      setRightIcon('eye-off');\n      setPasswordVisibility(!passwordVisibility);\n    } else if (rightIcon === 'eye-off') {\n      setRightIcon('eye');\n      setPasswordVisibility(!passwordVisibility);\n    }\n  }\n\n  async function handleOnLogin(values) {\n    const { email, password } = values;\n\n    try {\n      await loginWithEmail(email, password);\n    } catch (error) {\n      setLoginError(error.message);\n    }\n  }\n\n  return (\n    <View style={styles.container}>\n      <StatusBar\n        backgroundColor=\"rgb(174, 121, 132)\"\n        barStyle=\"light-content\"\n      />\n    <SafeView style={styles.container}>\n      <Form\n        initialValues={{ email: '', password: '' }}\n        validationSchema={validationSchema}\n        onSubmit={values => handleOnLogin(values)}\n      >\n        <FormField\n          name=\"email\"\n          leftIcon=\"email\"\n          placeholder=\"Vendosni Emailin\"\n          autoCapitalize=\"none\"\n          keyboardType=\"email-address\"\n          textContentType=\"emailAddress\"\n          autoFocus={true}\n        />\n        <FormField\n          name=\"password\"\n          leftIcon=\"lock\"\n          placeholder=\"Vendosni Fjalekalimin\"\n          autoCapitalize=\"none\"\n          autoCorrect={false}\n          secureTextEntry={passwordVisibility}\n          textContentType=\"password\"\n          rightIcon={rightIcon}\n          handlePasswordVisibility={handlePasswordVisibility}\n        />\n        <View style={styles.hyrja} >\n          <FormButton title={'Hyr'} />\n        {<FormErrorMessage error={loginError} visible={true} />}\n        </View>\n        \n      </Form>\n      <View style={styles.footerButtonContainer}>\n        <TouchableOpacity onPress={() => navigation.navigate('ForgotPassword')}>\n          <Text style={styles.forgotPasswordButtonText}>Harruat Fjalekalimin?</Text>\n        </TouchableOpacity>\n      </View>\n      <IconButton\n        style={styles.backButton}\n        iconName=\"keyboard-backspace\"\n        color=\"#fff\"\n        size={30}\n        onPress={() => navigation.goBack()}\n      />\n    </SafeView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n  backgroundColor: \"rgb(174, 121, 132)\",\n  paddingTop: '10%',\n  paddingLeft: 0,\n  flex: 1,\n  justifyContent: \"center\",\n  },\n  hyrja: {\n    flex: 0.5,\n    justifyContent: \"center\",\n    alignSelf: 'center',\n    width: '100%'\n    \n    \n  },\n  footerButtonContainer: {\n    marginVertical: 15,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  forgotPasswordButtonText: {\n    color: Colors.white,\n    fontSize: 18,\n    fontWeight: '600'\n  },\n  backButton: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\n","import React, { useState } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport * as Yup from 'yup';\n\nimport Colors from '../utils/colors';\nimport SafeView from '../components/SafeView';\nimport Form from '../components/Forms/Form';\nimport FormField from '../components/Forms/FormField';\nimport FormButton from '../components/Forms/FormButton';\nimport IconButton from '../components/IconButton';\nimport { passwordReset } from '../components/Firebase/firebase';\nimport FormErrorMessage from '../components/Forms/FormErrorMessage';\nimport useStatusBar from '../hooks/useStatusBar';\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string()\n    .label('Email')\n    .email('Enter a valid email')\n    .required('Ju lutem futni Emailin e regjistruar!')\n});\n\nexport default function ForgotPasswordScreen({ navigation }) {\n  useStatusBar('light-content');\n\n  const [customError, setCustomError] = useState('');\n\n  async function handlePasswordReset(values) {\n    const { email } = values;\n\n    try {\n      await passwordReset(email);\n      navigation.navigate('Welcome');\n    } catch (error) {\n      setCustomError(error.message);\n    }\n  }\n\n  return (\n    <SafeView style={styles.container}>\n      <Form\n        initialValues={{ email: '' }}\n        validationSchema={validationSchema}\n        onSubmit={values => handlePasswordReset(values)}\n      >\n        <FormField\n          name=\"email\"\n          leftIcon=\"email\"\n          placeholder=\"Emaili Juaj\"\n          autoCapitalize=\"none\"\n          keyboardType=\"email-address\"\n          textContentType=\"emailAddress\"\n          autoFocus={true}\n        />\n        <View style={styles.hyrja} >\n          <FormButton title=\"Dergo Fjalekalimin\" />\n        {<FormErrorMessage error={customError} visible={true} />}\n        </View>\n        \n      </Form>\n      <IconButton\n        style={styles.backButton}\n        iconName=\"keyboard-backspace\"\n        color={Colors.white}\n        size={30}\n        onPress={() => navigation.goBack()}\n      />\n    </SafeView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 15,\n    backgroundColor: \"rgb(174, 121, 132)\",\n  },\n  hyrja: {\n\n    flex: 1,\n    justifyContent: \"center\",\n    paddingLeft: '20%',\n    padding: 20,\n    borderRadius: 20,\n    width: '140%',\n  },\n\n  backButton: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginVertical: 10\n  }\n});\n","import React, { useState,  \r\n\r\n  useEffect, Component\r\n } from 'react';\r\nimport { StyleSheet, TouchableOpacity, View, StatusBar, SafeAreaView, Dimensions, MapView, Image, FlatList, ActivityIndicator,\r\n  RefreshControl} from 'react-native';\r\n  import { NavigationContainer } from '@react-navigation/native';\r\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\r\n  import Swiper from 'react-native-web-swiper';\r\nimport { render } from 'react-dom';\r\nimport * as firebase from 'firebase'\r\nimport 'firebase/firestore';\r\nexport default function GuestView() {\r\nconst App = () => {\r\n  let onEndReachedCalledDuringMomentum = false;\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isMoreLoading, setIsMoreLoading] = useState(false);\r\n  const [lastDoc, setLastDoc] = useState(null);\r\n  const [restaurants, setRestaurants] = useState([]);\r\n\r\n  const restaurantsRef = firestore().collection('Gastronomi');\r\n\r\n  useEffect(() => {\r\n    getRestaurants();\r\n  }, []);\r\n\r\n  getRestaurants = async () => {\r\n    setIsLoading(true);\r\n\r\n    const snapshot = await restaurantsRef.orderBy('id').limit(3).get();\r\n\r\n    if (!snapshot.empty) {\r\n      let newRestaurants = [];\r\n\r\n      setLastDoc(snapshot.docs[snapshot.docs.length - 1]);\r\n\r\n      for (let i = 0; i < snapshot.docs.length; i++) {\r\n        newRestaurants.push(snapshot.docs[i].data());\r\n      }\r\n\r\n      setRestaurants(newRestaurants);\r\n    } else {\r\n      setLastDoc(null);\r\n    }\r\n\r\n    setIsLoading(false);\r\n  }\r\n\r\n  getMore = async () => {\r\n    if (lastDoc) {\r\n      setIsMoreLoading(true);\r\n\r\n      setTimeout(async() => {\r\n      let snapshot = await restaurantsRef.orderBy('id').startAfter(lastDoc.data().id).limit(3).get();\r\n\r\n      if (!snapshot.empty) {\r\n        let newRestaurants = restaurants;\r\n\r\n        setLastDoc(snapshot.docs[snapshot.docs.length - 1]);\r\n\r\n        for(let i = 0; i < snapshot.docs.length; i++) {\r\n          newRestaurants.push(snapshot.docs[i].data());\r\n        }\r\n\r\n        setRestaurants(newRestaurants);\r\n        if (snapshot.docs.length < 3) setLastDoc(null);\r\n      } else {\r\n        setLastDoc(null);\r\n      }\r\n\r\n      setIsMoreLoading(false);\r\n    }, 1000);\r\n    }\r\n\r\n    onEndReachedCalledDuringMomentum = true;\r\n  }\r\n\r\n  renderList = ({ name, photo, budget, tags, rating, isNew }) => {\r\n    return (\r\n      <View style={styles.list}>\r\n        <Image source={{ uri: photo }} style={styles.listImage} />\r\n        <View style={styles.listingRatingContainer}>\r\n          <View style={{ flex: 1 }}>\r\n            <Text style={styles.name}>{name}</Text>\r\n          </View>\r\n          <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n            <Image source={star} style={{ marginRight: 5 }}/>\r\n              <Text style={styles.rating}><Text style={{ fontWeight: 'bold' }}>{rating}</Text>/5</Text>\r\n          </View>\r\n        </View>\r\n        <View style={styles.budgetTagsContainer}>\r\n          <Text style={[styles.budgetTagsText, budget <= 3 && {color: '#276FBF'}]}>$</Text>\r\n          <Text style={[styles.budgetTagsText, budget <= 3 && budget !== 1 && {color: '#276FBF'}]}>$</Text>\r\n          <Text style={[styles.budgetTagsText, budget === 3 && {color: '#276FBF'}]}>$</Text>\r\n          <View>\r\n            <Text numberOfLines={1} style={styles.budgetTagsText}>, {tags.join()}</Text>\r\n          </View>\r\n        </View>\r\n        {isNew && (\r\n          <View style={styles.newContainer}>\r\n            <Text style={styles.newText}>NEW</Text>\r\n          </View>\r\n        )}\r\n      </View>\r\n    )\r\n  }\r\n\r\n  onRefresh = () => {\r\n    setTimeout(() => {\r\n      getRestaurants();\r\n    }, 1000);\r\n  }\r\n\r\n  renderFooter = () => {\r\n    if (!isMoreLoading) return true;\r\n    \r\n    return (\r\n      <ActivityIndicator\r\n          size='large'\r\n          color={'#D83E64'}\r\n          style={{ marginBottom: 10 }}\r\n      />\r\n    )\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n  \r\n\r\n  \r\n    \r\n        <View style={styles.container}>\r\n        <StatusBar\r\n          backgroundColor=\"rgb(174, 121, 132)\"\r\n          barStyle=\"light-content\"\r\n        />\r\n        \r\n            <View style={styles.sliderContainer}\r\n              \r\n            ><Swiper horizontal={false}\r\n            timeout={3}\r\n            loop\r\n            \r\n            height={200}><View style={styles.slide}>\r\n                <Image source={require('../assets/swipe/12_daniel_can_bc-207.jpg')}\r\n                resizeMode='cover' style={styles.sliderImage}/></View>\r\n                <View style={styles.slide}>\r\n                <Image source={require('../assets/swipe/emo-happiness.jpg')}\r\n                resizeMode='cover'style={styles.sliderImage} /></View>\r\n                <View style={styles.slide}>\r\n                <Image source={require('../assets/swipe/nature1_gettyimages.jpg')}\r\n                resizeMode='cover' style={styles.sliderImage}/></View>\r\n                <View style={styles.slide}>\r\n                <Image source={require('../assets/swipe/96d0a32e8ab168eac62d8beee2ffabf7.17.jpg')}\r\n                resizeMode='cover' style={styles.sliderImage}/></View>\r\n              \r\n              </Swiper> \r\n              \r\n              \r\n              \r\n          </View>\r\n              \r\n             \r\n\r\n          \r\n          \r\n           \r\n            <View style={{\r\n               flex:1 ,\r\n               \r\n            }}> \r\n              \r\n\r\n            \r\n\r\n            </View>\r\n        \r\n        \r\n        </View>\r\n        \r\n        );\r\n          }\r\n          \r\n\r\n\r\n\r\n        \r\n    \r\n\r\n    \r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n\r\n    \r\n    }, \r\n    container: {\r\n      flex: 1,\r\n    },\r\n    sliderContainer: {\r\n      height: 150,\r\n      width: '90%',\r\n      marginTop: 10,\r\n      justifyContent: 'center',\r\n      alignSelf: 'center',\r\n      borderRadius: 8,\r\n    },\r\n  \r\n    wrapper: {},\r\n  \r\n    slide: {\r\n      flex: 1,\r\n      justifyContent: 'center',\r\n      backgroundColor: 'transparent',\r\n      borderRadius: 8,\r\n    },\r\n    sliderImage: {\r\n      height: '100%',\r\n      width: '100%',\r\n      alignSelf: 'center',\r\n      borderRadius: 8,\r\n    },\r\n    categoryContainer: {\r\n      flexDirection: 'row',\r\n      width: '90%',\r\n      alignSelf: 'center',\r\n      marginTop: 25,\r\n      marginBottom: 10,\r\n    },\r\n    categoryBtn: {\r\n      flex: 1,\r\n      width: '30%',\r\n      marginHorizontal: 0,\r\n      alignSelf: 'center',\r\n    },\r\n    categoryIcon: {\r\n      borderWidth: 0,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      alignSelf: 'center',\r\n      width: 70,\r\n      height: 70,\r\n      backgroundColor: '#fdeae7' /* '#FF6347' */,\r\n      borderRadius: 50,\r\n    },\r\n    categoryBtnTxt: {\r\n      alignSelf: 'center',\r\n      marginTop: 5,\r\n      color: '#de4f35',\r\n    },\r\n    cardsWrapper: {\r\n      marginTop: 20,\r\n      width: '90%',\r\n      alignSelf: 'center',\r\n    },\r\n    card: {\r\n      height: 100,\r\n      marginVertical: 10,\r\n      flexDirection: 'row',\r\n      shadowColor: '#999',\r\n      shadowOffset: {width: 0, height: 1},\r\n      shadowOpacity: 0.8,\r\n      shadowRadius: 2,\r\n      elevation: 5,\r\n    },\r\n    cardImgWrapper: {\r\n      flex: 1,\r\n    },\r\n    cardImg: {\r\n      height: '100%',\r\n      width: '100%',\r\n      alignSelf: 'center',\r\n      borderRadius: 8,\r\n      borderBottomRightRadius: 0,\r\n      borderTopRightRadius: 0,\r\n    },\r\n    cardInfo: {\r\n      flex: 2,\r\n      padding: 10,\r\n      borderColor: '#ccc',\r\n      borderWidth: 1,\r\n      borderLeftWidth: 0,\r\n      borderBottomRightRadius: 8,\r\n      borderTopRightRadius: 8,\r\n      backgroundColor: '#fff',\r\n    },\r\n    cardTitle: {\r\n      fontWeight: 'bold',\r\n    },\r\n    cardDetails: {\r\n      fontSize: 12,\r\n      color: '#444',\r\n    }, \r\n    \r\n    header: {\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      height: 70,\r\n      paddingTop: 20\r\n    },\r\n    headerLogo: {\r\n      width: 30,\r\n      height: 30,\r\n      marginRight: 10\r\n    \r\n    \r\n    },\r\n    title: {\r\n      fontWeight: '300',\r\n      fontSize: 26,\r\n      marginVertical: 10,\r\n      marginLeft: 10,\r\n      color: '#333333'\r\n    },\r\n    list: {\r\n      width: '25%',\r\n      justifyContent: 'center',\r\n      paddingHorizontal: 5,\r\n      marginBottom: 20,\r\n      marginLeft: 25\r\n    \r\n      \r\n    },\r\n    \r\n\r\n    listImage: {\r\n      width: '100%',\r\n      height: 100,\r\n      borderRadius: 20,\r\n      flexDirection: 'row',\r\n      justifyContent: 'center'\r\n    \r\n      \r\n  \r\n      \r\n      \r\n      \r\n    },\r\n   \r\n    listingRatingContainer: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between',\r\n      marginTop: 10\r\n    },\r\n    name: {\r\n      fontWeight: '500',\r\n      fontSize: 17, \r\n      color: '#333333'\r\n    },\r\n   \r\n    budgetTagsContainer: {\r\n      width: '100%',\r\n      flexDirection: 'row',\r\n      alignItems: 'center'\r\n    },\r\n    \r\n    \r\n    newContainer: {\r\n      position: 'absolute',\r\n      top: 20,\r\n      left: 10,\r\n      backgroundColor: '#D83E64',\r\n      paddingHorizontal: 20,\r\n      paddingVertical: 10\r\n    },\r\n   \r\n})}","import { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\r\nimport Zemer from './Zemer';\r\nimport Lista from './Lista';\r\nimport React  from 'react';\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\r\nconst Tab = createMaterialBottomTabNavigator();\r\n\r\nfunction MyTabs() {\r\n  return (\r\n       <Tab.Navigator\r\n        initialRouteName=\"Home\"\r\n        activeColor=\"#e91e63\"\r\n        style={{ backgroundColor: 'tomato' }}\r\n      >\r\n        <Tab.Screen\r\n          name=\"Home\"\r\n          component={GuestView}\r\n          options={{\r\n            tabBarLabel: 'Home',\r\n            tabBarIcon: ({ color }) => (\r\n              <MaterialCommunityIcons name=\"home\" color={color} size={26} />\r\n            ),\r\n          }}\r\n        />\r\n        <Tab.Screen\r\n          name=\"Notifications\"\r\n          component={Zemer}\r\n          options={{\r\n            tabBarLabel: 'Updates',\r\n            tabBarIcon: ({ color }) => (\r\n              <MaterialCommunityIcons name=\"bell\" color={color} size={26} />\r\n            ),\r\n          }}\r\n        />\r\n        <Tab.Screen\r\n          name=\"Profile\"\r\n          component={Lista}\r\n          options={{\r\n            tabBarLabel: 'Profile',\r\n            tabBarIcon: ({ color }) => (\r\n              <MaterialCommunityIcons name=\"account\" color={color} size={26} />\r\n            ),\r\n          }}\r\n        />\r\n      </Tab.Navigator>\r\n  )}\r\n    \r\n\r\n  export default MyTabs","import * as React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport WelcomeScreen from '../screens/WelcomeScreen';\nimport RegisterScreen from '../screens/RegisterScreen';\nimport LoginScreen from '../screens/LoginScreen';\nimport ForgotPasswordScreen from '../screens/ForgotPasswordScreen';\nimport GuestView from '../screens/GuestView'\nimport MyTabs from '../screens/MyTabs';\nimport { NavigationContainer } from '@react-navigation/native';\n\nimport Lista from '../screens/Lista';\n\n\n\n\n\nconst Stack = createStackNavigator();\n\nexport default function AuthStack() {\n  return (\n    <Stack.Navigator initialRouteName=\"Welcome\" headerMode=\"none\">\n      <Stack.Screen name=\"Welcome\" component={WelcomeScreen} />\n      <Stack.Screen name=\"Login\" component={LoginScreen} />\n      <Stack.Screen name=\"Register\" component={RegisterScreen} />\n      <Stack.Screen name=\"ForgotPassword\" component={ForgotPasswordScreen} />\n      <Stack.Screen name=\"GuestView\" component={GuestView} />\n      \n\n    </Stack.Navigator>\n  );\n}\n","import React from 'react';\nimport { View, StyleSheet, Button } from 'react-native';\n\nimport useStatusBar from '../hooks/useStatusBar';\nimport { logout } from '../components/Firebase/firebase';\n\nexport default function HomeScreen() {\n  useStatusBar('dark-content');\n  async function handleSignOut() {\n    try {\n      await logout();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  return (\n    <View style={styles.container}>\n      <Button title=\"Dilni\" onPress={handleSignOut} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});\n","import * as React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport HomeScreen from '../screens/HomeScreen';\n\nconst Stack = createStackNavigator();\n\nexport default function AppStack() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen name=\"Home\" component={HomeScreen} />\n    </Stack.Navigator>\n  );\n}\n","import React from 'react';\nimport { ActivityIndicator, StyleSheet } from 'react-native';\n\nimport SafeView from './SafeView';\nimport Colors from '../utils/colors';\n\nexport default function Spinner() {\n  return (\n    <SafeView style={styles.container}>\n      <ActivityIndicator size=\"large\" color={\"rgb(174, 121, 132)\"} />\n    </SafeView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\n","import React, { useContext, useEffect, useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\n\nimport { auth } from '../components/Firebase/firebase';\nimport navigationTheme from './navigationTheme';\nimport AuthStack from './AuthStack';\nimport AppStack from './AppStack';\nimport { AuthUserContext } from './AuthUserProvider';\nimport Spinner from '../components/Spinner';\n\nexport default function Routes() {\n  const { user, setUser } = useContext(AuthUserContext);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // onAuthStateChanged returns an unsubscriber\n    const unsubscribeAuth = auth.onAuthStateChanged(async authUser => {\n      try {\n        await (authUser ? setUser(authUser) : setUser(null));\n        setIsLoading(false);\n      } catch (error) {\n        console.log(error);\n      }\n    });\n\n    // unsubscribe auth listener on unmount\n    return unsubscribeAuth;\n  }, []);\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  return (\n    <NavigationContainer theme={navigationTheme}>\n      {user ? <AppStack /> : <AuthStack />}\n    </NavigationContainer>\n  );\n}\n","import React from 'react';\nimport { AuthUserProvider } from './AuthUserProvider';\nimport Routes from './Routes';\n\n/**\n * Wrap all providers here\n */\n\nexport default function Providers() {\n  return (\n    <AuthUserProvider>\n      <Routes />\n    </AuthUserProvider>\n  );\n}\n","import React from 'react';\n\nimport Providers from './navigation';\n\nexport default function App() {\n  return <Providers />;\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/InformAl/expo-service-worker.js', { scope: '/InformAl/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/flame.4b4bfc48.png\";","module.exports = __webpack_public_path__ + \"static/media/12_daniel_can_bc-207.44511b1d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/emo-happiness.55e876ff.jpg\";","module.exports = __webpack_public_path__ + \"static/media/nature1_gettyimages.b3298ea1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/96d0a32e8ab168eac62d8beee2ffabf7.17.4e1d41a6.jpg\";"],"sourceRoot":""}